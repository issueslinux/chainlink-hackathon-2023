/* eslint-disable camelcase */
const {
  rollback,
  insert,
  commit,
  startTransaction
} = require('@evershop/postgres-query-builder');
const { Pool } = require('pg');
const {
  OK,
  INTERNAL_SERVER_ERROR
} = require('@evershop/evershop/src/lib/util/httpStatus');

// Poniżej należy umieścić ustawienia połączenia do bazy danych
const connectionSetting = {
  user: 'postgres',
  host: 'localhost',
  database: 'eventshop',
  password: 'chainlinkhackathon',
  port: 5432,
};

module.exports = async (request, response, deledate, next) => {
  const pool = new Pool(connectionSetting);
  const connection = await pool.connect();
  await startTransaction(connection);
  
  const gasPrices = request.body; // Oczekujemy danych w formacie { 12: 333, 2: 0.013, ... }

  try {
    const insertedGasPrices = [];
      for (const key in gasPrices) {
        const id = parseInt(key); // Przyjmujemy wartość id z klucza JSON
        const price = parseFloat(gasPrices[key].price)

        const gasPrice = await insert('gas_price')
          .given({
            id, // Przyjmujemy wartość id z JSON
            price // Przyjmujemy wartość ceny z gasPrices[key]
          })
          .execute(connection);

        insertedGasPrices.push(gasPrice);
}

    await commit(connection);
    response.status(OK);
    response.json({
      data: insertedGasPrices
    });
  } catch (e) {
    await rollback(connection);
    response.status(INTERNAL_SERVER_ERROR);
    response.json({
      error: {
        status: INTERNAL_SERVER_ERROR,
        message: e.message
      }
    });
  } finally {
    connection.release(); // Zwolnienie połączenia
  }
};
